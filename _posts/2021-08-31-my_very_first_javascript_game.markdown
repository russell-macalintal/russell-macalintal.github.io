---
layout: post
title:      "My Very First JavaScript Game"
date:       2021-08-31 06:20:00 +0000
permalink:  my_very_first_javascript_game
---


Glad to say I've finally done it! I've programmed my very first game software in JavaScript. Granted, it's only a basic memory-based game that won't win any developer awards, but it is the first interactive game and application I've designed that is not directed by a lab or lesson. And the fact that I was able to code a majority of the logic and mechanics myself with minimal Googling, while incorporating asynchronous AJAX functions with access to a backend database that's been developed and framed as an API using Ruby on Rails, is certainly big personal accomplishment.

I've always been intrigued with game software development and have perused a few source codes over the years of applications ranging from simple text-based games to 2D adventure and platforming games. However given that I only had very limited exposure to coding languages other than C++ in my high school and college years, I always felt ill-equipped in reading and understanding the sometimes substantial codebases and generally just felt lost whenever I tried to delve too deep. As time went by, and as I developed a full-time career in a completely different field, I had less and less free time to play games and even less time to study their source codes. And so the thought of game development never really became anything more than a dream laying dormant in the back of my mind.

Luckily my journey through this Software Engineering Curriculum has reignited my interest in coding, and the "free time" it has forced me to create and allocate for my studies has allowed me to once again explore this potential path in my life. Brainstorming for the portfolio projects has actually streered me back into gaming. Ideas that I've bounced around as potential candidates for my projects always revolve around videogames as the main component. And up to this point, my portfolio project applications have always centered around scraping/creating a digital library of games, (not only to keep track of my own backlog of games, accumulated over the past decade or so, that have yet to play but) mainly because the other frameworks did not really lend themselves for use in applications with high levels of interactivity. On the other hand, I feel that Javascript is a great starter framework for simple and fun interactive media. In fact, it was the sample game applications provided with the project requirements that ultimately inspired me to create my own. And the fact that this particular project centered on creating a Single Page Application provided the perfect opportunity to do just that.

One of the driving factors that led me to develop my own memory based game is actually the fact that matching colors is one of my toddler's favorite activities to play. In fact, during the course of this project, I encouraged him to play with the application as much as possible and, in doing so, I would say he certainly helped me in debugging. 

Implementing the logic and mechanics of the game was actually not the most difficult part; the concepts behind a memory game are relatively straightforward, except for the card shuffling and card reveal that resulted in some undesired behavior. But a few hours of Googling and trial and error eventually sorted out those bugs. However, the asynchronous AJAX functions did give me quite a headache as I had to refactor my code a number of times to get the proper scoping and hoisting setup in order to get the code to correctly compile and execute. Given that a number of tasks had to rely on the completion of fetch requests to the Rails API server, I ran into some critical issues which led to application-breaking errors caused by the return of unfulfilled Promises due to the nature of asynchronous fetch request. After several hours of debugging, however, I would say that I was pretty succesful in creating a well-performing application.

Overall, I did enjoy this project quite a bit and while I understand why Javascript is not everyone's cup of tea, I do believe that it is a very powerful framework that can be used for highly interactive applications. I am actually quite happy with the game I've developed and I will certainly try my hand in developing more original applications that will help me use and practice some of Javascript's more powerful tools. 
